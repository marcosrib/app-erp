
CREATE TABLE IF NOT EXISTS "USERS" (
  "ID" BIGSERIAL PRIMARY KEY,
  "NAME" VARCHAR(100),
  "EMAIL" VARCHAR(50) UNIQUE,
  "PASSWORD" VARCHAR(255),
  "STATUS" BOOLEAN DEFAULT false,
  "CREATED_AT" TIMESTAMP,
  "UPDATED_AT" TIMESTAMP,
  "DELETED_AT" TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "PROFILES" (
   "ID" BIGSERIAL PRIMARY KEY,
   "NAME" VARCHAR(45) NOT NULL,
   "DESCRIPTION" VARCHAR(500),
   "CREATED_AT" TIMESTAMP NULL,
   "UPDATED_AT" TIMESTAMP NULL
);

CREATE TABLE IF NOT EXISTS "USER_PROFILES" (
  "USER_ID" BIGINT,
  "PROFILE_ID" BIGINT,
  CONSTRAINT "FK_USER_ID"
    FOREIGN KEY ("USER_ID")
    REFERENCES "USERS" ("ID")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "FK_PROFILE_ID"
    FOREIGN KEY ("PROFILE_ID")
    REFERENCES "PROFILES" ("ID")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE INDEX "FK_USER_ID_PROFILE_ID_IDX" ON "USER_PROFILES" ("USER_ID", "PROFILE_ID");

CREATE TABLE IF NOT EXISTS "ABILITY_GROUPS" (
    "ID" BIGSERIAL PRIMARY KEY,
    "NAME" VARCHAR(100) NOT NULL,
    "CODE" VARCHAR(100) NOT NULL,
    "CREATED_AT" TIMESTAMP NULL,
    "UPDATED_AT" TIMESTAMP NULL
);

CREATE TABLE IF NOT EXISTS "ABILITY_CATEGORIES" (
  "ID" BIGSERIAL PRIMARY KEY,
  "CODE" VARCHAR(100) NOT NULL,
  "NAME" VARCHAR(100) NOT NULL,
  "CREATED_AT" TIMESTAMP NULL,
  "UPDATED_AT" TIMESTAMP NULL
);

CREATE TABLE IF NOT EXISTS "ABILITIES" (
  "ID" BIGSERIAL PRIMARY KEY,
  "ABILITY_CATEGORY_ID" BIGINT,
  "ABILITY_GROUP_ID" BIGINT,
  CONSTRAINT "FK_ABILITY_CATEGORY_ID"
    FOREIGN KEY ("ABILITY_CATEGORY_ID")
    REFERENCES "ABILITY_CATEGORIES" ("ID"),
  CONSTRAINT "FK_ABILITY_GROUP_ID"
    FOREIGN KEY ("ABILITY_GROUP_ID")
    REFERENCES "ABILITY_GROUPS" ("ID")
);

CREATE INDEX "IDX_ABILITY_CATEGORIES_ID" ON "ABILITIES" ("ABILITY_CATEGORY_ID");
CREATE INDEX "IDX_ABILITY_GROUP_ID" ON "ABILITIES" ("ABILITY_GROUP_ID");

CREATE TABLE IF NOT EXISTS "PROFILE_ABILITIES" (
  "PROFILE_ID" BIGINT,
  "ABILITY_ID" BIGINT,
  CONSTRAINT "FK_PA_PROFILE_ID"
    FOREIGN KEY ("PROFILE_ID")
    REFERENCES "PROFILES" ("ID"),
  CONSTRAINT "FK_PA_ABILITY_ID"
    FOREIGN KEY ("ABILITY_ID")
    REFERENCES "ABILITIES" ("ID"),
  PRIMARY KEY ("PROFILE_ID", "ABILITY_ID")
);

CREATE INDEX "FK_PROFILE_ABILITIES_ID_IDX" ON "PROFILE_ABILITIES" ("ABILITY_ID", "PROFILE_ID");

CREATE TABLE IF NOT EXISTS "STATES" (
  "ID" SERIAL PRIMARY KEY,
  "NAME" VARCHAR(200),
  "CODE" VARCHAR(2),
  "CREATED_AT" TIMESTAMP,
  "UPDATED_AT" TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "ADDRESSES" (
  "ID" BIGSERIAL PRIMARY KEY,
  "ADDRESS" VARCHAR(200),
  "NUMBER" VARCHAR(10),
  "CEP" VARCHAR(10),
  "COMPLEMENT" VARCHAR(50),
  "CITY" VARCHAR(150),
  "STATE_ID" INTEGER,
  "CREATED_AT" TIMESTAMP,
  "UPDATED_AT" TIMESTAMP,
  CONSTRAINT "FK_STATE_ID"
    FOREIGN KEY ("STATE_ID")
    REFERENCES "STATES" ("ID")
);
CREATE TYPE type_of_person AS ENUM('PJ', 'PF');
CREATE TYPE type_supplier AS ENUM('SERVICE_PROVIDER', 'PRODUCT_SUPPLIER');

CREATE TABLE IF NOT EXISTS "SUPPLIERS" (
  "ID" SERIAL PRIMARY KEY,
  "FANTASY_NAME" VARCHAR(150),
  "COMPANY_NAME" VARCHAR(255),
  "EMAIL" VARCHAR(50) UNIQUE,
  "CELL_PHONE_NUMBER" VARCHAR(9),
  "PHONE_NUMBER" VARCHAR(9),
  "CPF_CNPJ" VARCHAR(14),
  "TYPE_OF_PERSON" type_of_person NOT NULL DEFAULT 'PJ',
  "TYPE_SUPPLIER"  type_supplier NOT NULL DEFAULT 'PRODUCT_SUPPLIER',
  "ADDRESS_ID" BIGINT,
  "CREATED_AT" TIMESTAMP,
  "UPDATED_AT" TIMESTAMP,
  "DELETE_AT" TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "COST_CENTERS" (
  "ID" SERIAL PRIMARY KEY,
  "NAME" VARCHAR(150),
  "CREATED_AT" TIMESTAMP,
  "UPDATED_AT" TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "BILL_PAY_CATEGORY_GROUPS" (
  "ID" SERIAL PRIMARY KEY,
  "NAME" VARCHAR(150),
  "CREATED_AT" TIMESTAMP,
  "UPDATED_AT" TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "BILL_PAY_CATEGORIES" (
  "ID" SERIAL PRIMARY KEY,
  "NAME" VARCHAR(150),
  "BILL_PAY_CATEGORY_GROUP_ID" INTEGER,
  "CREATED_AT" TIMESTAMP,
  "UPDATED_AT" TIMESTAMP,
  CONSTRAINT "FK_BILLS_TO_PAY_BILL_PAY_CATEGORY_GROUP_ID"
    FOREIGN KEY ("BILL_PAY_CATEGORY_GROUP_ID")
    REFERENCES "BILL_PAY_CATEGORY_GROUPS" ("ID")
);

CREATE TABLE IF NOT EXISTS "BILLS_TO_PAYS" (
  "ID" BIGSERIAL PRIMARY KEY,
  "VALUE" DECIMAL(10,2),
  "STATUS" VARCHAR(20),
  "BILL_PAY_CATEGORY_ID" INTEGER,
  "SUPPLIER_ID" INTEGER,
  "COST_CENTER_ID" INTEGER,
  "PAYMENT_DATE" TIMESTAMP,
  "DUE_DATE" TIMESTAMP,
  "CREATED_AT" TIMESTAMP,
  "UPDATED_AT" TIMESTAMP,
  CONSTRAINT "FK_BILLS_TO_PAY_SUPPLIER_ID"
    FOREIGN KEY ("SUPPLIER_ID")
    REFERENCES "SUPPLIERS" ("ID"),
  CONSTRAINT "FK_BILLS_TO_PAY_COST_CENTER_ID"
    FOREIGN KEY ("COST_CENTER_ID")
    REFERENCES "COST_CENTERS" ("ID"),
  CONSTRAINT "FK_BILLS_TO_PAY_BILL_PAY_CATEGORY_ID"
    FOREIGN KEY ("BILL_PAY_CATEGORY_ID")
    REFERENCES "BILL_PAY_CATEGORIES" ("ID")
);

CREATE TABLE IF NOT EXISTS  "SERVICE_ORDER" (
  "ID" BIGSERIAL PRIMARY KEY,
  "VALUE" DECIMAL(10,2),
  "STATUS" VARCHAR(20),
  "DUE_DATE" TIMESTAMP,
  "SUPPLIER_ID" INTEGER,
  "COST_CENTER_ID" INTEGER,
  "CREATED_AT" TIMESTAMP,
  "UPDATED_AT" TIMESTAMP,
  CONSTRAINT "FK_SERVICE_ORDER_SUPPLIER_ID"
    FOREIGN KEY ("SUPPLIER_ID")
    REFERENCES "SUPPLIERS" ("ID"),
  CONSTRAINT "FK_SERVICE_ORDER_COST_CENTER_ID"
    FOREIGN KEY ("COST_CENTER_ID")
    REFERENCES "COST_CENTERS" ("ID")
);

CREATE TABLE IF NOT EXISTS  "PURCHASE_ORDER" (
  "ID" BIGSERIAL PRIMARY KEY,
  "VALUE" DECIMAL(10,2),
  "STATUS" VARCHAR(20),
  "DUE_DATE" TIMESTAMP,
  "COST_CENTER_ID" INTEGER,
  "SUPPLIER_ID" INTEGER,
  "CREATED_AT" TIMESTAMP,
  "UPDATED_AT" TIMESTAMP,
  CONSTRAINT "FK_PURCHASE_ORDER_SUPPLIER_ID"
    FOREIGN KEY ("SUPPLIER_ID")
    REFERENCES "SUPPLIERS" ("ID")
);
